basePath: /api/v1
definitions:
  bill.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  color.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  model.BillHeadDto:
    properties:
      id:
        type: string
      lines:
        description: Nested BillLine DTO
        items:
          $ref: '#/definitions/model.BillLineDto'
        type: array
      total:
        type: number
      user_id:
        type: string
    type: object
  model.BillLineDto:
    properties:
      betting_on:
        type: string
      bill_id:
        type: string
      match:
        $ref: '#/definitions/model.MatchDto'
      match_id:
        type: string
      rate:
        type: number
    type: object
  model.ColorDto:
    properties:
      id:
        type: string
      title:
        type: string
      total_matches:
        type: integer
      won:
        type: integer
    type: object
  model.MatchDto:
    properties:
      end_time:
        type: string
      id:
        type: string
      start_time:
        type: string
      team_a:
        type: string
      team_a_score:
        type: integer
      team_b:
        type: string
      team_b_score:
        type: integer
      type:
        type: string
      winner:
        type: string
    type: object
  model.MatchesByDate:
    properties:
      date:
        type: string
      types:
        items:
          $ref: '#/definitions/model.MatchesByType'
        type: array
    type: object
  model.MatchesByType:
    properties:
      matches:
        items:
          $ref: '#/definitions/model.MatchDto'
        type: array
      sportType:
        type: string
    type: object
  model.OAuthCodeDto:
    properties:
      code:
        type: string
    type: object
  model.RefreshTokenDto:
    properties:
      refresh_token:
        type: string
    type: object
  model.ScoreDto:
    properties:
      teamAScore:
        type: integer
      teamBScore:
        type: integer
    type: object
  model.UserDto:
    properties:
      email:
        type: string
      group_id:
        type: string
      id:
        type: string
      name:
        type: string
      remaining_coin:
        type: number
      role_id:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is an Intania888 Backend API in Intania888 project.
  title: Intania888 Backend - API
  version: 0.0.0
paths:
  /auth/login:
    get:
      description: Retrieves the OAuth login URL
      produces:
      - application/json
      responses:
        "200":
          description: url
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login URL
      tags:
      - Auth
  /auth/login/callback:
    post:
      consumes:
      - application/json
      description: Verifies the OAuth login and returns credentials
      parameters:
      - description: OAuth Code
        in: body
        name: oauthCode
        required: true
        schema:
          $ref: '#/definitions/model.OAuthCodeDto'
      produces:
      - application/json
      responses:
        "200":
          description: credential
          schema:
            additionalProperties: true
            type: object
        "400":
          description: cannot parse body
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: OAuth Login Callback
      tags:
      - Auth
  /auth/me:
    get:
      description: Retrieves user profile data
      produces:
      - application/json
      responses:
        "200":
          description: profile
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: bad request error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: GetMe
      tags:
      - Auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Refreshes the access token using the refresh token
      parameters:
      - description: Refresh Token
        in: body
        name: refreshToken
        required: true
        schema:
          $ref: '#/definitions/model.RefreshTokenDto'
      produces:
      - application/json
      responses:
        "200":
          description: credential
          schema:
            additionalProperties: true
            type: object
        "400":
          description: cannot parse body
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Refresh Token
      tags:
      - Auth
  /bills:
    get:
      consumes:
      - application/json
      description: Get all bills
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.BillHeadDto'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/bill.ErrorResponse'
      summary: Get all bills
      tags:
      - Bill
    post:
      consumes:
      - application/json
      description: Create a new bill with the input payload
      parameters:
      - description: Create bill
        in: body
        name: bill
        required: true
        schema:
          $ref: '#/definitions/model.BillHeadDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.BillHeadDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/bill.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/bill.ErrorResponse'
      summary: Create a new bill
      tags:
      - Bill
  /bills/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a bill by its ID
      parameters:
      - description: Bill ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/bill.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/bill.ErrorResponse'
      summary: Delete a bill
      tags:
      - Bill
    get:
      consumes:
      - application/json
      description: Get a bill by its ID
      parameters:
      - description: Bill ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.BillHeadDto'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/bill.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/bill.ErrorResponse'
      summary: Get a bill by ID
      tags:
      - Bill
    put:
      consumes:
      - application/json
      description: Update a bill with the input payload
      parameters:
      - description: Bill ID
        in: path
        name: id
        required: true
        type: string
      - description: Update bill
        in: body
        name: bill
        required: true
        schema:
          $ref: '#/definitions/model.BillHeadDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.BillHeadDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/bill.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/bill.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/bill.ErrorResponse'
      summary: Update a bill
      tags:
      - Bill
  /colors/leaderboards:
    get:
      consumes:
      - application/json
      description: Get all colors with their leaderboard info
      parameters:
      - description: Type ID to filter
        in: query
        name: typeId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.ColorDto'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/color.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/color.ErrorResponse'
      summary: Get all color leaderboards
      tags:
      - Color
  /matches:
    get:
      description: Retrieves a list of matches, optionally filtered by type and schedule
      parameters:
      - description: Filter by sport type ID
        in: query
        name: typeId
        type: string
      - description: Filter by schedule (schedule or result)
        in: query
        name: schedule
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of matches grouped by date and sport type
          schema:
            items:
              $ref: '#/definitions/model.MatchesByDate'
            type: array
        "400":
          description: Invalid schedule parameter
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Failed to fetch matches
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Retrieves a list of matches, optionally filtered by type and schedule
      tags:
      - Match
    post:
      consumes:
      - application/json
      description: Creates a new match and stores it in the system
      parameters:
      - description: Match information
        in: body
        name: match
        required: true
        schema:
          $ref: '#/definitions/model.MatchDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created match successful
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request payload
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Failed to create match
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Creates a new match
      tags:
      - Match
  /matches/{id}:
    delete:
      description: Deletes a match by its ID
      parameters:
      - description: Match ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: Deleted match successful
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Failed to delete match
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Deletes a match by its ID
      tags:
      - Match
    get:
      description: Retrieves a single match by its ID
      parameters:
      - description: Match ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.MatchDto'
        "404":
          description: Match not found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Retrieves a single match by its ID
      tags:
      - Match
  /matches/{id}/score:
    patch:
      consumes:
      - application/json
      description: Updates the score of a match
      parameters:
      - description: Match ID
        in: path
        name: id
        required: true
        type: string
      - description: Score information
        in: body
        name: score
        required: true
        schema:
          $ref: '#/definitions/model.ScoreDto'
      produces:
      - application/json
      responses:
        "200":
          description: Updated match score successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request payload
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Failed to update match score
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Updates the score of a match
      tags:
      - Match
  /matches/{id}/winner/{winner_id}:
    patch:
      description: Updates the winner of a match
      parameters:
      - description: Match ID
        in: path
        name: id
        required: true
        type: string
      - description: Winner Team ID
        in: path
        name: winner_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Updated match winner successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Failed to update match winner
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Updates the winner of a match
      tags:
      - Match
  /users:
    get:
      description: Retrieves a list of all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.UserDto'
            type: array
        "500":
          description: internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all users
      tags:
      - User
    post:
      consumes:
      - application/json
      description: Creates a new user and stores it in the system
      parameters:
      - description: User information
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.UserDto'
        "400":
          description: cannot parse body
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new user
      tags:
      - User
  /users/{id}:
    delete:
      description: Deletes a user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "500":
          description: internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete user
      tags:
      - User
    get:
      description: Retrieves a single user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserDto'
        "404":
          description: user not found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get user by ID
      tags:
      - User
    patch:
      consumes:
      - application/json
      description: Updates an existing user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated user information
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserDto'
        "400":
          description: cannot parse body
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update user
      tags:
      - User
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and the token
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
