basePath: /api/v1
definitions:
  model.OAuthCodeDto:
    properties:
      code:
        type: string
    type: object
  model.RefreshTokenDto:
    properties:
      refresh_token:
        type: string
    type: object
  model.UserDto:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      role_id:
        type: string
      updated_at:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is an Intania888 Backend API in Intania888 project.
  title: Intania888 Backend - API
  version: 0.0.0
paths:
  /auth/login:
    get:
      description: Retrieves the OAuth login URL
      produces:
      - application/json
      responses:
        "200":
          description: url
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login URL
      tags:
      - Auth
  /auth/login/callback:
    post:
      consumes:
      - application/json
      description: Verifies the OAuth login and returns credentials
      parameters:
      - description: OAuth Code
        in: body
        name: oauthCode
        required: true
        schema:
          $ref: '#/definitions/model.OAuthCodeDto'
      produces:
      - application/json
      responses:
        "200":
          description: credential
          schema:
            additionalProperties: true
            type: object
        "400":
          description: cannot parse body
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: OAuth Login Callback
      tags:
      - Auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Refreshes the access token using the refresh token
      parameters:
      - description: Refresh Token
        in: body
        name: refreshToken
        required: true
        schema:
          $ref: '#/definitions/model.RefreshTokenDto'
      produces:
      - application/json
      responses:
        "200":
          description: credential
          schema:
            additionalProperties: true
            type: object
        "400":
          description: cannot parse body
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Refresh Token
      tags:
      - Auth
  /users:
    get:
      description: Retrieves a list of all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.UserDto'
            type: array
        "500":
          description: internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all users
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: Creates a new user and stores it in the system
      parameters:
      - description: User information
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.UserDto'
        "400":
          description: cannot parse body
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new user
      tags:
      - Users
  /users/{id}:
    delete:
      description: Deletes a user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "500":
          description: internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete user
      tags:
      - Users
    get:
      description: Retrieves a single user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserDto'
        "404":
          description: user not found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get user by ID
      tags:
      - Users
    patch:
      consumes:
      - application/json
      description: Updates an existing user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated user information
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserDto'
        "400":
          description: cannot parse body
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update user
      tags:
      - Users
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and the token
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
